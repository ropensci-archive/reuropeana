% Generated by roxygen2 (4.0.2): do not edit by hand
\name{eu_providers}
\alias{eu_providers}
\title{Search Europeana data providers.}
\usage{
eu_providers(providerid = NULL, datasetid = NULL, datasets = FALSE,
  start = NULL, limit = 10, country_code = NULL,
  key = getOption("eu_key"), ...)
}
\arguments{
\item{providerid}{Provider ID}

\item{datasetid}{Dataset ID}

\item{datasets}{(logical) Whether to return datasets or not with provider information. Ignored
when providerid is NULL (the default for that parameter).}

\item{start}{(numeric) Record number to start with.}

\item{limit}{(numeric) Size of the result set to fetch.}

\item{country_code}{(character) Two-letter ISO 3166-1 country code. Not all countries give data
back of course, for example, there is no data for country_code='US'.}

\item{key}{Your Europeana API key.}

\item{callopts}{Curl options passed on to httr::GET, see examples}
}
\description{
Search Europeana data providers.
}
\examples{
\dontrun{
eu_providers(limit=1)
eu_providers(limit=1, start=3)
out <- eu_providers(limit=3)
out$meta
out$items
eu_providers(start=3)
eu_providers(providerid=20239)
eu_providers(providerid=20239, datasets=TRUE)
eu_providers(datasetid=2023901)
identical(eu_providers(providerid=20239, datasets=TRUE)$items,
   eu_providers(datasetid=2023901)$items)

# Country codes
out <- eu_providers(country_code='UK')
sapply(out$items, "[[", "country") # check that all country fields are UK

# Curl debugging
library("httr")
eu_providers(limit=1, config=verbose())
}
}

